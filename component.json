{
    "title": "AWS Glue",
    "description": "<fullname>AWS Glue</fullname> <p>Defines the public endpoint for the AWS Glue service.</p>",
    "docsUrl": "https://aws.amazon.com/glue/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/glue/2017-03-31/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://glue.amazonaws.com/",
                    "http://glue.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "BatchCreatePartition": {
            "main": "./lib/actions/BatchCreatePartition.js",
            "title": "Creates one or more partitions in a batch operation.",
            "description": "Creates one or more partitions in a batch operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchCreatePartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDeleteConnection": {
            "main": "./lib/actions/BatchDeleteConnection.js",
            "title": "Deletes a list of connection definitions from the Data Catalog.",
            "description": "Deletes a list of connection definitions from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDeleteConnection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDeletePartition": {
            "main": "./lib/actions/BatchDeletePartition.js",
            "title": "Deletes one or more partitions in a batch operation.",
            "description": "Deletes one or more partitions in a batch operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDeletePartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDeleteTable": {
            "main": "./lib/actions/BatchDeleteTable.js",
            "title": "<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you will no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
            "description": "<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you will no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDeleteTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDeleteTableVersion": {
            "main": "./lib/actions/BatchDeleteTableVersion.js",
            "title": "Deletes a specified batch of versions of a table.",
            "description": "Deletes a specified batch of versions of a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDeleteTableVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetCrawlers": {
            "main": "./lib/actions/BatchGetCrawlers.js",
            "title": "Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions to based on tags.",
            "description": "Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions to based on tags.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetCrawlers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetDevEndpoints": {
            "main": "./lib/actions/BatchGetDevEndpoints.js",
            "title": "Returns a list of resource metadata for a given list of DevEndpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
            "description": "Returns a list of resource metadata for a given list of DevEndpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetDevEndpoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetJobs": {
            "main": "./lib/actions/BatchGetJobs.js",
            "title": "Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. ",
            "description": "Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetJobs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetPartition": {
            "main": "./lib/actions/BatchGetPartition.js",
            "title": "Retrieves partitions in a batch request.",
            "description": "Retrieves partitions in a batch request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetPartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetTriggers": {
            "main": "./lib/actions/BatchGetTriggers.js",
            "title": "Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
            "description": "Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchStopJobRun": {
            "main": "./lib/actions/BatchStopJobRun.js",
            "title": "Stops one or more job runs for a specified job definition.",
            "description": "Stops one or more job runs for a specified job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchStopJobRun.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateClassifier": {
            "main": "./lib/actions/CreateClassifier.js",
            "title": "Creates a classifier in the user's account. This may be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, or abbrev <code>JsonClassifier</code>, depending on which field of the request is present.",
            "description": "Creates a classifier in the user's account. This may be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, or abbrev <code>JsonClassifier</code>, depending on which field of the request is present.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateClassifier.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateConnection": {
            "main": "./lib/actions/CreateConnection.js",
            "title": "Creates a connection definition in the Data Catalog.",
            "description": "Creates a connection definition in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateConnection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateCrawler": {
            "main": "./lib/actions/CreateCrawler.js",
            "title": "Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <i>s3Targets</i> field, the <i>jdbcTargets</i> field, or the <i>DynamoDBTargets</i> field.",
            "description": "Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <i>s3Targets</i> field, the <i>jdbcTargets</i> field, or the <i>DynamoDBTargets</i> field.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDatabase": {
            "main": "./lib/actions/CreateDatabase.js",
            "title": "Creates a new database in a Data Catalog.",
            "description": "Creates a new database in a Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDatabase.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDevEndpoint": {
            "main": "./lib/actions/CreateDevEndpoint.js",
            "title": "Creates a new DevEndpoint.",
            "description": "Creates a new DevEndpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDevEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateJob": {
            "main": "./lib/actions/CreateJob.js",
            "title": "Creates a new job definition.",
            "description": "Creates a new job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateJob.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePartition": {
            "main": "./lib/actions/CreatePartition.js",
            "title": "Creates a new partition.",
            "description": "Creates a new partition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateScript": {
            "main": "./lib/actions/CreateScript.js",
            "title": "Transforms a directed acyclic graph (DAG) into code.",
            "description": "Transforms a directed acyclic graph (DAG) into code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateScript.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSecurityConfiguration": {
            "main": "./lib/actions/CreateSecurityConfiguration.js",
            "title": "Creates a new security configuration.",
            "description": "Creates a new security configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTable": {
            "main": "./lib/actions/CreateTable.js",
            "title": "Creates a new table definition in the Data Catalog.",
            "description": "Creates a new table definition in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTrigger": {
            "main": "./lib/actions/CreateTrigger.js",
            "title": "Creates a new trigger.",
            "description": "Creates a new trigger.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateUserDefinedFunction": {
            "main": "./lib/actions/CreateUserDefinedFunction.js",
            "title": "Creates a new function definition in the Data Catalog.",
            "description": "Creates a new function definition in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateUserDefinedFunction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteClassifier": {
            "main": "./lib/actions/DeleteClassifier.js",
            "title": "Removes a classifier from the Data Catalog.",
            "description": "Removes a classifier from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteClassifier.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteConnection": {
            "main": "./lib/actions/DeleteConnection.js",
            "title": "Deletes a connection from the Data Catalog.",
            "description": "Deletes a connection from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteConnection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCrawler": {
            "main": "./lib/actions/DeleteCrawler.js",
            "title": "Removes a specified crawler from the Data Catalog, unless the crawler state is <code>RUNNING</code>.",
            "description": "Removes a specified crawler from the Data Catalog, unless the crawler state is <code>RUNNING</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDatabase": {
            "main": "./lib/actions/DeleteDatabase.js",
            "title": "<p>Removes a specified Database from a Data Catalog.</p> <note> <p>After completing this operation, you will no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>",
            "description": "<p>Removes a specified Database from a Data Catalog.</p> <note> <p>After completing this operation, you will no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDatabase.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDevEndpoint": {
            "main": "./lib/actions/DeleteDevEndpoint.js",
            "title": "Deletes a specified DevEndpoint.",
            "description": "Deletes a specified DevEndpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDevEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteJob": {
            "main": "./lib/actions/DeleteJob.js",
            "title": "Deletes a specified job definition. If the job definition is not found, no exception is thrown.",
            "description": "Deletes a specified job definition. If the job definition is not found, no exception is thrown.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteJob.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePartition": {
            "main": "./lib/actions/DeletePartition.js",
            "title": "Deletes a specified partition.",
            "description": "Deletes a specified partition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteResourcePolicy": {
            "main": "./lib/actions/DeleteResourcePolicy.js",
            "title": "Deletes a specified policy.",
            "description": "Deletes a specified policy.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteResourcePolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSecurityConfiguration": {
            "main": "./lib/actions/DeleteSecurityConfiguration.js",
            "title": "Deletes a specified security configuration.",
            "description": "Deletes a specified security configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTable": {
            "main": "./lib/actions/DeleteTable.js",
            "title": "<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you will no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
            "description": "<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you will no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTableVersion": {
            "main": "./lib/actions/DeleteTableVersion.js",
            "title": "Deletes a specified version of a table.",
            "description": "Deletes a specified version of a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTableVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTrigger": {
            "main": "./lib/actions/DeleteTrigger.js",
            "title": "Deletes a specified trigger. If the trigger is not found, no exception is thrown.",
            "description": "Deletes a specified trigger. If the trigger is not found, no exception is thrown.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteUserDefinedFunction": {
            "main": "./lib/actions/DeleteUserDefinedFunction.js",
            "title": "Deletes an existing function definition from the Data Catalog.",
            "description": "Deletes an existing function definition from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteUserDefinedFunction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCatalogImportStatus": {
            "main": "./lib/actions/GetCatalogImportStatus.js",
            "title": "Retrieves the status of a migration operation.",
            "description": "Retrieves the status of a migration operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCatalogImportStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetClassifier": {
            "main": "./lib/actions/GetClassifier.js",
            "title": "Retrieve a classifier by name.",
            "description": "Retrieve a classifier by name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetClassifier.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetClassifiers": {
            "main": "./lib/actions/GetClassifiers.js",
            "title": "Lists all classifier objects in the Data Catalog.",
            "description": "Lists all classifier objects in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetClassifiers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetConnection": {
            "main": "./lib/actions/GetConnection.js",
            "title": "Retrieves a connection definition from the Data Catalog.",
            "description": "Retrieves a connection definition from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetConnection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetConnections": {
            "main": "./lib/actions/GetConnections.js",
            "title": "Retrieves a list of connection definitions from the Data Catalog.",
            "description": "Retrieves a list of connection definitions from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetConnections.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCrawler": {
            "main": "./lib/actions/GetCrawler.js",
            "title": "Retrieves metadata for a specified crawler.",
            "description": "Retrieves metadata for a specified crawler.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCrawlerMetrics": {
            "main": "./lib/actions/GetCrawlerMetrics.js",
            "title": "Retrieves metrics about specified crawlers.",
            "description": "Retrieves metrics about specified crawlers.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCrawlerMetrics.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCrawlers": {
            "main": "./lib/actions/GetCrawlers.js",
            "title": "Retrieves metadata for all crawlers defined in the customer account.",
            "description": "Retrieves metadata for all crawlers defined in the customer account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCrawlers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDataCatalogEncryptionSettings": {
            "main": "./lib/actions/GetDataCatalogEncryptionSettings.js",
            "title": "Retrieves the security configuration for a specified catalog.",
            "description": "Retrieves the security configuration for a specified catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDataCatalogEncryptionSettings.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDatabase": {
            "main": "./lib/actions/GetDatabase.js",
            "title": "Retrieves the definition of a specified database.",
            "description": "Retrieves the definition of a specified database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDatabase.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDatabases": {
            "main": "./lib/actions/GetDatabases.js",
            "title": "Retrieves all Databases defined in a given Data Catalog.",
            "description": "Retrieves all Databases defined in a given Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDatabases.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDataflowGraph": {
            "main": "./lib/actions/GetDataflowGraph.js",
            "title": "Transforms a Python script into a directed acyclic graph (DAG). ",
            "description": "Transforms a Python script into a directed acyclic graph (DAG). ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDataflowGraph.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDevEndpoint": {
            "main": "./lib/actions/GetDevEndpoint.js",
            "title": "<p>Retrieves information about a specified DevEndpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>",
            "description": "<p>Retrieves information about a specified DevEndpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDevEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDevEndpoints": {
            "main": "./lib/actions/GetDevEndpoints.js",
            "title": "<p>Retrieves all the DevEndpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>",
            "description": "<p>Retrieves all the DevEndpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDevEndpoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetJob": {
            "main": "./lib/actions/GetJob.js",
            "title": "Retrieves an existing job definition.",
            "description": "Retrieves an existing job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetJob.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetJobRun": {
            "main": "./lib/actions/GetJobRun.js",
            "title": "Retrieves the metadata for a given job run.",
            "description": "Retrieves the metadata for a given job run.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetJobRun.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetJobRuns": {
            "main": "./lib/actions/GetJobRuns.js",
            "title": "Retrieves metadata for all runs of a given job definition.",
            "description": "Retrieves metadata for all runs of a given job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetJobRuns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetJobs": {
            "main": "./lib/actions/GetJobs.js",
            "title": "Retrieves all current job definitions.",
            "description": "Retrieves all current job definitions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetJobs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMapping": {
            "main": "./lib/actions/GetMapping.js",
            "title": "Creates mappings.",
            "description": "Creates mappings.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPartition": {
            "main": "./lib/actions/GetPartition.js",
            "title": "Retrieves information about a specified partition.",
            "description": "Retrieves information about a specified partition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPartitions": {
            "main": "./lib/actions/GetPartitions.js",
            "title": "Retrieves information about the partitions in a table.",
            "description": "Retrieves information about the partitions in a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPartitions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPlan": {
            "main": "./lib/actions/GetPlan.js",
            "title": "Gets code to perform a specified mapping.",
            "description": "Gets code to perform a specified mapping.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetResourcePolicy": {
            "main": "./lib/actions/GetResourcePolicy.js",
            "title": "Retrieves a specified resource policy.",
            "description": "Retrieves a specified resource policy.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetResourcePolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSecurityConfiguration": {
            "main": "./lib/actions/GetSecurityConfiguration.js",
            "title": "Retrieves a specified security configuration.",
            "description": "Retrieves a specified security configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSecurityConfigurations": {
            "main": "./lib/actions/GetSecurityConfigurations.js",
            "title": "Retrieves a list of all security configurations.",
            "description": "Retrieves a list of all security configurations.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSecurityConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTable": {
            "main": "./lib/actions/GetTable.js",
            "title": "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.",
            "description": "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTableVersion": {
            "main": "./lib/actions/GetTableVersion.js",
            "title": "Retrieves a specified version of a table.",
            "description": "Retrieves a specified version of a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTableVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTableVersions": {
            "main": "./lib/actions/GetTableVersions.js",
            "title": "Retrieves a list of strings that identify available versions of a specified table.",
            "description": "Retrieves a list of strings that identify available versions of a specified table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTableVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTables": {
            "main": "./lib/actions/GetTables.js",
            "title": "Retrieves the definitions of some or all of the tables in a given <code>Database</code>.",
            "description": "Retrieves the definitions of some or all of the tables in a given <code>Database</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTables.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTags": {
            "main": "./lib/actions/GetTags.js",
            "title": "Retrieves a list of tags associated with a resource.",
            "description": "Retrieves a list of tags associated with a resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTrigger": {
            "main": "./lib/actions/GetTrigger.js",
            "title": "Retrieves the definition of a trigger.",
            "description": "Retrieves the definition of a trigger.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTriggers": {
            "main": "./lib/actions/GetTriggers.js",
            "title": "Gets all the triggers associated with a job.",
            "description": "Gets all the triggers associated with a job.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetUserDefinedFunction": {
            "main": "./lib/actions/GetUserDefinedFunction.js",
            "title": "Retrieves a specified function definition from the Data Catalog.",
            "description": "Retrieves a specified function definition from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetUserDefinedFunction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetUserDefinedFunctions": {
            "main": "./lib/actions/GetUserDefinedFunctions.js",
            "title": "Retrieves a multiple function definitions from the Data Catalog.",
            "description": "Retrieves a multiple function definitions from the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetUserDefinedFunctions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ImportCatalogToGlue": {
            "main": "./lib/actions/ImportCatalogToGlue.js",
            "title": "Imports an existing Athena Data Catalog to AWS Glue",
            "description": "Imports an existing Athena Data Catalog to AWS Glue",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ImportCatalogToGlue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListCrawlers": {
            "main": "./lib/actions/ListCrawlers.js",
            "title": "<p>Retrieves the names of all crawler resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "description": "<p>Retrieves the names of all crawler resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListCrawlers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDevEndpoints": {
            "main": "./lib/actions/ListDevEndpoints.js",
            "title": "<p>Retrieves the names of all DevEndpoint resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "description": "<p>Retrieves the names of all DevEndpoint resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDevEndpoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListJobs": {
            "main": "./lib/actions/ListJobs.js",
            "title": "<p>Retrieves the names of all job resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "description": "<p>Retrieves the names of all job resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListJobs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTriggers": {
            "main": "./lib/actions/ListTriggers.js",
            "title": "<p>Retrieves the names of all trigger resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "description": "<p>Retrieves the names of all trigger resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag will be retrieved.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutDataCatalogEncryptionSettings": {
            "main": "./lib/actions/PutDataCatalogEncryptionSettings.js",
            "title": "Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.",
            "description": "Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutDataCatalogEncryptionSettings.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutResourcePolicy": {
            "main": "./lib/actions/PutResourcePolicy.js",
            "title": "Sets the Data Catalog resource policy for access control.",
            "description": "Sets the Data Catalog resource policy for access control.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutResourcePolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResetJobBookmark": {
            "main": "./lib/actions/ResetJobBookmark.js",
            "title": "Resets a bookmark entry.",
            "description": "Resets a bookmark entry.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResetJobBookmark.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartCrawler": {
            "main": "./lib/actions/StartCrawler.js",
            "title": "Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.",
            "description": "Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartCrawlerSchedule": {
            "main": "./lib/actions/StartCrawlerSchedule.js",
            "title": "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.",
            "description": "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartCrawlerSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartJobRun": {
            "main": "./lib/actions/StartJobRun.js",
            "title": "Starts a job run using a job definition.",
            "description": "Starts a job run using a job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartJobRun.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartTrigger": {
            "main": "./lib/actions/StartTrigger.js",
            "title": "Starts an existing trigger. See <a href=\"http://docs.aws.amazon.com/glue/latest/dg/trigger-job.html\">Triggering Jobs</a> for information about how different types of trigger are started.",
            "description": "Starts an existing trigger. See <a href=\"http://docs.aws.amazon.com/glue/latest/dg/trigger-job.html\">Triggering Jobs</a> for information about how different types of trigger are started.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopCrawler": {
            "main": "./lib/actions/StopCrawler.js",
            "title": "If the specified crawler is running, stops the crawl.",
            "description": "If the specified crawler is running, stops the crawl.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopCrawlerSchedule": {
            "main": "./lib/actions/StopCrawlerSchedule.js",
            "title": "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.",
            "description": "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopCrawlerSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopTrigger": {
            "main": "./lib/actions/StopTrigger.js",
            "title": "Stops a specified trigger.",
            "description": "Stops a specified trigger.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TagResource": {
            "main": "./lib/actions/TagResource.js",
            "title": "Adds tags to a resource. A tag is a label you can assign to an AWS resource. In AWS Glue, you can tag only certain resources. For information about what resources you can tag, see <a href=\"http://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">AWS Tags in AWS Glue</a>.",
            "description": "Adds tags to a resource. A tag is a label you can assign to an AWS resource. In AWS Glue, you can tag only certain resources. For information about what resources you can tag, see <a href=\"http://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">AWS Tags in AWS Glue</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UntagResource": {
            "main": "./lib/actions/UntagResource.js",
            "title": "Removes tags from a resource.",
            "description": "Removes tags from a resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UntagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateClassifier": {
            "main": "./lib/actions/UpdateClassifier.js",
            "title": "Modifies an existing classifier (a <code>GrokClassifier</code>, <code>XMLClassifier</code>, or <code>JsonClassifier</code>, depending on which field is present).",
            "description": "Modifies an existing classifier (a <code>GrokClassifier</code>, <code>XMLClassifier</code>, or <code>JsonClassifier</code>, depending on which field is present).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateClassifier.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateConnection": {
            "main": "./lib/actions/UpdateConnection.js",
            "title": "Updates a connection definition in the Data Catalog.",
            "description": "Updates a connection definition in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateConnection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateCrawler": {
            "main": "./lib/actions/UpdateCrawler.js",
            "title": "Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.",
            "description": "Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateCrawler.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateCrawlerSchedule": {
            "main": "./lib/actions/UpdateCrawlerSchedule.js",
            "title": "Updates the schedule of a crawler using a <code>cron</code> expression. ",
            "description": "Updates the schedule of a crawler using a <code>cron</code> expression. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateCrawlerSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateDatabase": {
            "main": "./lib/actions/UpdateDatabase.js",
            "title": "Updates an existing database definition in a Data Catalog.",
            "description": "Updates an existing database definition in a Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateDatabase.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateDevEndpoint": {
            "main": "./lib/actions/UpdateDevEndpoint.js",
            "title": "Updates a specified DevEndpoint.",
            "description": "Updates a specified DevEndpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateDevEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateJob": {
            "main": "./lib/actions/UpdateJob.js",
            "title": "Updates an existing job definition.",
            "description": "Updates an existing job definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateJob.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePartition": {
            "main": "./lib/actions/UpdatePartition.js",
            "title": "Updates a partition.",
            "description": "Updates a partition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePartition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTable": {
            "main": "./lib/actions/UpdateTable.js",
            "title": "Updates a metadata table in the Data Catalog.",
            "description": "Updates a metadata table in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTrigger": {
            "main": "./lib/actions/UpdateTrigger.js",
            "title": "Updates a trigger definition.",
            "description": "Updates a trigger definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTrigger.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateUserDefinedFunction": {
            "main": "./lib/actions/UpdateUserDefinedFunction.js",
            "title": "Updates an existing function definition in the Data Catalog.",
            "description": "Updates an existing function definition in the Data Catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateUserDefinedFunction.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}