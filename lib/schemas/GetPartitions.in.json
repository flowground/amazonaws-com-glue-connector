{
    "type": "object",
    "properties": {
        "MaxResults": {
            "required": false,
            "type": "string"
        },
        "NextToken": {
            "required": false,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "CatalogId": {
                    "description": "The ID of the Data Catalog where the partitions in question reside. If none is supplied, the AWS account ID is used by default.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
                },
                "DatabaseName": {
                    "description": "The name of the catalog database where the partitions reside.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
                },
                "Expression": {
                    "description": "<p>An expression filtering the partitions to be returned.</p> <p>The expression uses SQL syntax similar to the SQL <code>WHERE</code> filter clause. The SQL statement parser <a href=\"http://jsqlparser.sourceforge.net/home.php\">JSQLParser</a> parses the expression. </p> <p> <i>Operators</i>: The following are the operators that you can use in the <code>Expression</code> API call:</p> <dl> <dt>=</dt> <dd> <p>Checks if the values of the two operands are equal or not; if yes, then the condition becomes true.</p> <p>Example: Assume 'variable a' holds 10 and 'variable b' holds 20. </p> <p>(a = b) is not true.</p> </dd> <dt>&lt; &gt;</dt> <dd> <p>Checks if the values of two operands are equal or not; if the values are not equal, then the condition becomes true.</p> <p>Example: (a &lt; &gt; b) is true.</p> </dd> <dt>&gt;</dt> <dd> <p>Checks if the value of the left operand is greater than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt; b) is not true.</p> </dd> <dt>&lt;</dt> <dd> <p>Checks if the value of the left operand is less than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt; b) is true.</p> </dd> <dt>&gt;=</dt> <dd> <p>Checks if the value of the left operand is greater than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt;= b) is not true.</p> </dd> <dt>&lt;=</dt> <dd> <p>Checks if the value of the left operand is less than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt;= b) is true.</p> </dd> <dt>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</dt> <dd> <p>Logical operators.</p> </dd> </dl> <p> <i>Supported Partition Key Types</i>: The following are the the supported partition keys.</p> <ul> <li> <p> <code>string</code> </p> </li> <li> <p> <code>date</code> </p> </li> <li> <p> <code>timestamp</code> </p> </li> <li> <p> <code>int</code> </p> </li> <li> <p> <code>bigint</code> </p> </li> <li> <p> <code>long</code> </p> </li> <li> <p> <code>tinyint</code> </p> </li> <li> <p> <code>smallint</code> </p> </li> <li> <p> <code>decimal</code> </p> </li> </ul> <p>If an invalid type is encountered, an exception is thrown. </p> <p>The following list shows the valid operators on each type. When you define a crawler, the <code>partitionKey</code> type is created as a <code>STRING</code>, to be compatible with the catalog partitions. </p> <p> <i>Sample API Call</i>: </p>",
                    "maxLength": 2048,
                    "minLength": 0,
                    "type": "string",
                    "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
                },
                "MaxResults": {
                    "description": "The maximum number of partitions to return in a single response.",
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer"
                },
                "NextToken": {
                    "description": "A continuation token, if this is not the first call to retrieve these partitions.",
                    "type": "string"
                },
                "Segment": {
                    "description": "The segment of the table's partitions to scan in this request.",
                    "properties": {
                        "SegmentNumber": {
                            "description": "The zero-based index number of the this segment. For example, if the total number of segments is 4, SegmentNumber values will range from zero through three.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "TotalSegments": {
                            "description": "The total numer of segments.",
                            "maximum": 10,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    "required": [
                        "SegmentNumber",
                        "TotalSegments"
                    ],
                    "type": "object"
                },
                "TableName": {
                    "description": "The name of the partitions' table.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
                }
            },
            "required": [
                "DatabaseName",
                "TableName"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}